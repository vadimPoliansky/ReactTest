'use strict';

var _ = require('..');

var combineLoader = _interopRequireWildcard(_);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

jest.unmock('..');

describe('combine-loader', function () {
  it('returns the correct module content', function () {
    var context = {
      cacheable: jest.fn(),
      query: '?' + JSON.stringify({
        raw: 'raw-loader',
        frontmatter: ['json-loader', 'front-matter-loader?onlyAttributes'],
        content: ['html-loader', 'markdown-it-loader', 'front-matter-loader?onlyBody']
      })
    };
    var result = combineLoader.pitch.call(context, './path/to/example.md');

    expect(context.cacheable).toBeCalled();
    expect(result).toBe('module.exports = {' + '"raw": require(' + '"-!raw-loader!./path/to/example.md"' + '),' + '"frontmatter": require(' + '"-!json-loader!front-matter-loader?onlyAttributes!./path/to/example.md"' + '),' + '"content": require(' + '"-!html-loader!markdown-it-loader!front-matter-loader?onlyBody!./path/to/example.md"' + ')' + '}');
  });
});