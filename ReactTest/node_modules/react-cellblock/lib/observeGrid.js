/*
 * Higher order component
 * allows you to build your responsive components
 */
'use strict';

var _inherits = require('babel-runtime/helpers/inherits')['default'];

var _createClass = require('babel-runtime/helpers/create-class')['default'];

var _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];

var _extends = require('babel-runtime/helpers/extends')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

exports.__esModule = true;
exports['default'] = observeGrid;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _utilContext = require('./util/context');

var _utilContext2 = _interopRequireDefault(_utilContext);

/*
 * A patch:
 * shouldComponentUpdate() can block context updates
 * so we need to add a fallback method for
 * updating interested components.
 * When React offers a better way, this should be removed
 */

var _utilHandleStaleContext = require('./util/handleStaleContext');

// apply patch

function observeGrid(DumbComponent) {
  return (function (_Component) {
    _inherits(_class, _Component);

    function _class() {
      _classCallCheck(this, _class2);

      _Component.apply(this, arguments);
    }

    _class.prototype.render = function render() {
      var _context = this.context;
      var cellblockColumn = _context.cellblockColumn;
      var cellblockGet = _context.cellblockGet;

      var v = cellblockGet('viewport');
      var c = cellblockGet('columnWidth');
      var g = cellblockGet('gutterWidth');

      return _react2['default'].createElement(DumbComponent, _extends({
        breakpoint: v[0],
        colWidth: cellblockColumn.getWidth(v[0], 0),
        colMinPixelWidth: cellblockColumn.getWidth(v[0] * c + v[0] * g - g, g),
        colMaxPixelWidth: cellblockColumn.getWidth(v[1] * c + v[1] * g - g, g)
      }, this.props));
    };

    _createClass(_class, null, [{
      key: 'displayName',
      value: 'observeGrid(' + (DumbComponent.displayName || DumbComponent.name) + ')',
      enumerable: true
    }, {
      key: 'contextTypes',
      value: _utilContext2['default'],
      enumerable: true
    }]);

    var _class2 = _class;
    _class = _utilHandleStaleContext.forceContext(_class) || _class;
    return _class;
  })(_react.Component);
}

module.exports = exports['default'];