{"version":3,"sources":["../src/uniqueArray.js"],"names":["requiredUniqueArray","props","propName","componentName","rest","result","array","isRequired","uniqueCount","Set","size","length","RangeError","uniqueArray"],"mappings":";;;;AAAA;;AACA;;;;;;AAEA,SAASA,mBAAT,CAA6BC,KAA7B,EAAoCC,QAApC,EAA8CC,aAA9C,EAAsE;AAAA;;AAAA,oCAANC,IAAM;AAANA,QAAM;AAAA;;AACpE,MAAMC,SAAS,qCAAUC,KAAV,EAAgBC,UAAhB,0BAA2BN,KAA3B,EAAkCC,QAAlC,EAA4CC,aAA5C,SAA8DC,IAA9D,EAAf;AACA,MAAIC,UAAU,IAAd,EAAoB;AAClB,WAAOA,MAAP;AACD;;AAED,MAAMC,QAAQL,MAAMC,QAAN,CAAd;AACA,MAAMM,cAAc,IAAIC,GAAJ,CAAQH,KAAR,EAAeI,IAAnC;AACA,MAAIF,gBAAgBF,MAAMK,MAA1B,EAAkC;AAChC,WAAO,IAAIC,UAAJ,QAAkBT,aAAlB,mCAA2DG,MAAMK,MAAN,GAAeH,WAA1E,+BAAP;AACD;AACD,SAAO,IAAP;AACD;;AAED,SAASK,WAAT,CAAqBZ,KAArB,EAA4BC,QAA5B,EAA+C;AAC7C,MAAMI,QAAQL,MAAMC,QAAN,CAAd;AACA,MAAII,SAAS,IAAb,EAAmB;AACjB,WAAO,IAAP;AACD;;AAJ4C,qCAANF,IAAM;AAANA,QAAM;AAAA;;AAM7C,SAAOJ,sCAAoBC,KAApB,EAA2BC,QAA3B,SAAwCE,IAAxC,EAAP;AACD;AACDS,YAAYN,UAAZ,GAAyBP,mBAAzB;;qBAEe;AAAA,SAAM,gCAAca,WAAd,EAA2B,aAA3B,CAAN;AAAA,C","file":"uniqueArray.js","sourcesContent":["import { PropTypes } from 'react';\nimport wrapValidator from './helpers/wrapValidator';\n\nfunction requiredUniqueArray(props, propName, componentName, ...rest) {\n  const result = PropTypes.array.isRequired(props, propName, componentName, ...rest);\n  if (result != null) {\n    return result;\n  }\n\n  const array = props[propName];\n  const uniqueCount = new Set(array).size;\n  if (uniqueCount !== array.length) {\n    return new RangeError(`${componentName}: values must be unique. ${array.length - uniqueCount} duplicate values found.`);\n  }\n  return null;\n}\n\nfunction uniqueArray(props, propName, ...rest) {\n  const array = props[propName];\n  if (array == null) {\n    return null;\n  }\n\n  return requiredUniqueArray(props, propName, ...rest);\n}\nuniqueArray.isRequired = requiredUniqueArray;\n\nexport default () => wrapValidator(uniqueArray, 'uniqueArray');\n"]}