{"version":3,"sources":["../src/forbidExtraProps.js"],"names":["forbidExtraProps","zeroWidthSpace","semaphore","brand","fn","Object","assign","isBranded","value","propTypes","TypeError","forbidUnknownProps","props","_","componentName","unknownProps","keys","filter","prop","length","join"],"mappings":";;;qBAcwBA,gB;;AAdxB;;;;AACA;;;;;;;;AAEA,IAAMC,iBAAiB,QAAvB;AACA,IAAMC,YAAY,EAAlB;;AAEA,SAASC,KAAT,CAAeC,EAAf,EAAmB;AACjB,SAAOC,OAAOC,MAAP,CAAcF,EAAd,sBAAqBH,cAArB,EAAsCC,SAAtC,EAAP;AACD;;AAED,SAASK,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,SAAOA,SAASA,MAAMP,cAAN,MAA0BC,SAA1C;AACD;;AAEc,SAASF,gBAAT,CAA0BS,SAA1B,EAAqC;AAClD,MAAI,CAAC,gCAAcA,SAAd,CAAL,EAA+B;AAC7B,UAAM,IAAIC,SAAJ,CAAc,mCAAd,CAAN;AACD;AACD,MAAI,sBAAID,SAAJ,EAAeR,cAAf,KAAkC,CAACM,UAAUE,UAAUR,cAAV,CAAV,CAAvC,EAA6E;AAC3E,UAAM,IAAIS,SAAJ,CAAc,wIAAd,CAAN;AACD;;AAED,2BACKD,SADL,sBAGGR,cAHH,EAGoBE;AAAM,aAASQ,kBAAT,CAA4BC,KAA5B,EAAmCC,CAAnC,EAAsCC,aAAtC,EAAqD;AAC3E,UAAMC,eAAeV,OAAOW,IAAP,CAAYJ,KAAZ,EAAmBK,MAAnB,CAA0B;AAAA,eAAQ,CAAC,sBAAIR,SAAJ,EAAeS,IAAf,CAAT;AAAA,OAA1B,CAArB;AACA,UAAIH,aAAaI,MAAb,GAAsB,CAA1B,EAA6B;AAC3B,eAAO,IAAIT,SAAJ,QAAiBI,aAAjB,uCAAwDC,aAAaK,IAAb,CAAkB,IAAlB,CAAxD,EAAP;AACD;AACD,aAAO,IAAP;AACD;;AANiB,WAAeT,kBAAf;AAAA,MAHpB;AAWD","file":"forbidExtraProps.js","sourcesContent":["import has from 'has';\nimport isPlainObject from './helpers/isPlainObject';\n\nconst zeroWidthSpace = '\\u200b';\nconst semaphore = {};\n\nfunction brand(fn) {\n  return Object.assign(fn, { [zeroWidthSpace]: semaphore });\n}\n\nfunction isBranded(value) {\n  return value && value[zeroWidthSpace] === semaphore;\n}\n\nexport default function forbidExtraProps(propTypes) {\n  if (!isPlainObject(propTypes)) {\n    throw new TypeError('given propTypes must be an object');\n  }\n  if (has(propTypes, zeroWidthSpace) && !isBranded(propTypes[zeroWidthSpace])) {\n    throw new TypeError('Against all odds, you created a propType for a prop named after the zero-width space - which, sadly, conflicts with `forbidExtraProps`');\n  }\n\n  return {\n    ...propTypes,\n    // eslint-disable-next-line prefer-arrow-callback\n    [zeroWidthSpace]: brand(function forbidUnknownProps(props, _, componentName) {\n      const unknownProps = Object.keys(props).filter(prop => !has(propTypes, prop));\n      if (unknownProps.length > 0) {\n        return new TypeError(`${componentName}: unknown props found: ${unknownProps.join(', ')}`);\n      }\n      return null;\n    }),\n  };\n}\n"]}