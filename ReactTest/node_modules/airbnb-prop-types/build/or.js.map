{"version":3,"sources":["../src/or.js"],"names":["or","validators","name","Array","isArray","TypeError","length","RangeError","validator","oneOfType","arrayOf"],"mappings":";;;qBAGwBA,E;;AAHxB;;AACA;;;;;;;;AAEe,SAASA,EAAT,CAAYC,UAAZ,EAAqC;AAAA,MAAbC,IAAa,uEAAN,IAAM;;AAClD,MAAI,CAACC,MAAMC,OAAN,CAAcH,UAAd,CAAL,EAAgC;AAC9B,UAAM,IAAII,SAAJ,CAAc,uCAAd,CAAN;AACD;AACD,MAAIJ,WAAWK,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,UAAM,IAAIC,UAAJ,CAAe,uCAAf,CAAN;AACD;;AAED,MAAMC,YAAY,iBAAUC,SAAV,CAAoB,CACpC,iBAAUA,SAAV,EACE,iBAAUC,OAAV,CAAkB,iBAAUD,SAAV,CAAoBR,UAApB,CAAlB,CADF,4BAEKA,UAFL,GADoC,CAApB,CAAlB;;AAOA,SAAO,gCAAcO,SAAd,EAAyBN,IAAzB,EAA+BD,UAA/B,CAAP;AACD","file":"or.js","sourcesContent":["import { PropTypes } from 'react';\nimport wrapValidator from './helpers/wrapValidator';\n\nexport default function or(validators, name = 'or') {\n  if (!Array.isArray(validators)) {\n    throw new TypeError('or: 2 or more validators are required');\n  }\n  if (validators.length <= 1) {\n    throw new RangeError('or: 2 or more validators are required');\n  }\n\n  const validator = PropTypes.oneOfType([\n    PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.oneOfType(validators)),\n      ...validators,\n    ]),\n  ]);\n\n  return wrapValidator(validator, name, validators);\n}\n"]}